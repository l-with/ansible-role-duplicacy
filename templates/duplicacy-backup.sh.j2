#!/bin/bash

# cd to working directory
cd {{ duplicacy_working_directory }}

# env
{% for _env in _duplicacy_env %}
export {{ _env }}="{{ _duplicacy_env[_env] }}"
{% endfor %}

# env backup
{% for _env in _duplicacy_env_backup %}
export {{ _env }}="{{ _duplicacy_env_backup[_env] }}"
{% endfor %}
 
# env special
{% for _env in _duplicacy_env_special %}
export {{ _env }}="{{ _duplicacy_env_special[_env] }}"
{% endfor %}

# pre backup
status=0
if [ -f {{ duplicacy_script_file_path }}/{{ duplicacy_pre_backup_script_file_name }} ]; then
    echo $(date "+%Y-%m-%d %H:%M:%S.%3N") INFO SCRIPT_RUN Running script {{ duplicacy_script_file_path }}/{{ duplicacy_pre_backup_script_file_name }} |\
        tee --append backup.log
    bash {{ duplicacy_script_file_path }}/{{ duplicacy_pre_backup_script_file_name }}
    status=$?
fi

if [ $status != 0 ]; then
    echo $(date "+%Y-%m-%d %H:%M:%S.%3N") ERROR SCRIPT_RUN Status code "'"$status"'" from script {{ duplicacy_script_file_path }}/{{ duplicacy_pre_backup_script_file_name }} |\
        tee --append backup.log
else 
# backup
    {{ duplicacy_path }}/bin/duplicacy -log backup {{ duplicacy_backup_options }} |\
        tee backup.log
fi

# post backup
if [ -f {{ duplicacy_script_file_path }}/{{ duplicacy_post_backup_script_file_name }} ]; then
    bash {{ duplicacy_script_file_path }}/{{ duplicacy_post_backup_script_file_name }}
    status=$?
    exit $status
fi
